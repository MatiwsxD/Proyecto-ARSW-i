{"ast":null,"code":"var _jsxFileName = \"D:\\\\Escritorio\\\\Proyecto\\\\TicTacToe\\\\frontend\\\\src\\\\pages\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport \"./Game.css\";\nimport { useState } from \"react\";\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar infoPlayer = null;\nvar player = null;\nvar turn = null;\nvar sala = null;\nvar stompClient = null;\nvar tempBoard = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\nconst patterns = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\nexport let Game = function () {\n  _s();\n\n  var [board, setBoard] = useState(tempBoard);\n  const [result, setResult] = useState({\n    winner: \"none\",\n    state: \"none\"\n  });\n  useEffect(() => {\n    getData();\n    socketWeb();\n  }, []);\n  useEffect(() => {\n    checkWin();\n  }, [board]);\n  useEffect(() => {\n    if (result.state != \"none\") {\n      alert('Game Finished');\n    }\n  }, [result]);\n\n  async function getInfoPlayer() {}\n\n  async function subscribePlayerData() {\n    stompClient.subscribe('/events/ws/' + sala + player, {});\n  }\n\n  async function getData() {\n    sala = localStorage.getItem(\"Sala\"); //console.log(sala);\n\n    let url = 'http://localhost:8080/tictac/players/' + sala;\n    let players = await fetch(url, {\n      method: 'GET'\n    }).then(response => response.json());\n    player = players;\n\n    if (players === 1) {\n      turn = true;\n    } else {\n      turn = false;\n    }\n  }\n\n  ;\n\n  async function socketWeb() {\n    let Sock = await new SockJS(\"http://localhost:8080/tictactoe\");\n    stompClient = over(Sock);\n    stompClient.connect({}, function () {\n      stompClient.subscribe('/events/ws/' + sala, function (x) {\n        let y = x.body.split(',').map(function (item) {\n          return parseInt(item, 10);\n        });\n        turn = !turn;\n        chooseSquare(y[0], y[1]); //console.log(y)                \n      });\n    });\n  }\n\n  ;\n\n  let chooseSquare = function (player1, square) {\n    console.log(board);\n    setBoard(board.map((val, idx) => {\n      if (idx == square && val == \"\") {\n        tempBoard[square] = player1;\n        setBoard(tempBoard);\n        return player1;\n      }\n\n      return val;\n    }));\n  };\n\n  let sendMessage = function (pos) {\n    if (turn) {\n      stompClient.send('/events/ws/' + sala, {}, [player, pos]);\n    }\n  };\n\n  const checkWin = () => {\n    patterns.forEach(currPattern => {\n      const firstPlayer = board[currPattern[0]];\n      let foundWinningPattern = true;\n      if (firstPlayer == \"\") return;\n      currPattern.forEach(idx => {\n        if (board[idx] != firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n\n      if (foundWinningPattern) {\n        setResult({\n          winner: firstPlayer,\n          state: \"won\"\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[0],\n          chooseSquare: () => sendMessage(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[1],\n          chooseSquare: () => sendMessage(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[2],\n          chooseSquare: () => sendMessage(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[3],\n          chooseSquare: () => sendMessage(3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[4],\n          chooseSquare: () => sendMessage(4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[5],\n          chooseSquare: () => sendMessage(5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[6],\n          chooseSquare: () => sendMessage(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[7],\n          chooseSquare: () => sendMessage(7)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[8],\n          chooseSquare: () => sendMessage(8)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"9kheKm54AMAbzS53O3zzme7sXpE=\");\n\n_c = Game;\n\nlet Square = function (_ref) {\n  let {\n    val,\n    chooseSquare\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    onClick: chooseSquare,\n    children: val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Square;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Square\");","map":{"version":3,"names":["useState","over","SockJS","useEffect","infoPlayer","player","turn","sala","stompClient","tempBoard","patterns","Game","board","setBoard","result","setResult","winner","state","getData","socketWeb","checkWin","alert","getInfoPlayer","subscribePlayerData","subscribe","localStorage","getItem","url","players","fetch","method","then","response","json","Sock","connect","x","y","body","split","map","item","parseInt","chooseSquare","player1","square","console","log","val","idx","sendMessage","pos","send","forEach","currPattern","firstPlayer","foundWinningPattern","Square"],"sources":["D:/Escritorio/Proyecto/TicTacToe/frontend/src/pages/Game.js"],"sourcesContent":["import \"./Game.css\"\r\nimport { useState} from \"react\";\r\nimport {over} from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\nimport { useEffect} from \"react\";\r\n\r\nvar infoPlayer = null;\r\nvar player = null\r\nvar turn = null\r\nvar sala = null\r\nvar stompClient = null\r\nvar tempBoard =[\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]\r\nconst patterns =[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]]\r\n\r\nexport let Game = function(){\r\n    var [board, setBoard] = useState(tempBoard)\r\n    const[result,setResult] = useState({winner:\"none\",state:\"none\"})\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        socketWeb();\r\n     }, []);\r\n\r\n    useEffect(()=>{\r\n        checkWin();\r\n    },[board])\r\n\r\n    useEffect(()=>{\r\n        if(result.state !=\"none\"){\r\n            alert('Game Finished');\r\n        }\r\n       \r\n    },[result])\r\n\r\n    \r\n\r\n    async function getInfoPlayer(){\r\n        \r\n    }\r\n    async function subscribePlayerData(){\r\n        stompClient.subscribe('/events/ws/'+sala+player,{\r\n\r\n        })\r\n    }\r\n\r\n    async function getData(){\r\n        sala = localStorage.getItem(\"Sala\")\r\n        //console.log(sala);\r\n        let url = 'http://localhost:8080/tictac/players/'+sala\r\n        let players = await fetch(url,{\r\n            method: 'GET'\r\n            }).then(response => response.json());\r\n        player = players;\r\n        if(players === 1){\r\n           turn  = true;\r\n        }\r\n        else{\r\n            turn  = false;\r\n        }\r\n    };\r\n\r\n    async function socketWeb(){\r\n        let Sock = await new SockJS(\"http://localhost:8080/tictactoe\")\r\n        stompClient = over(Sock);\r\n        stompClient.connect({},function(){\r\n            stompClient.subscribe('/events/ws/'+sala, function(x){\r\n                let y = x.body.split(',').map(function(item) {\r\n                    return parseInt(item, 10);\r\n                });\r\n                turn  = !turn \r\n                chooseSquare(y[0],y[1])\r\n                //console.log(y)                \r\n           }); \r\n        });\r\n    };\r\n    \r\n\r\n    let chooseSquare = function(player1, square){\r\n        \r\n        console.log(board)\r\n        setBoard(\r\n            board.map((val,idx)=>{\r\n                if(idx == square && val ==\"\"){\r\n                    tempBoard[square] = player1\r\n                    setBoard(tempBoard)\r\n                    return player1\r\n                }\r\n                return val\r\n            })\r\n        )\r\n        \r\n\r\n    }\r\n    let sendMessage = function(pos){\r\n        if(turn){\r\n            stompClient.send('/events/ws/'+sala,{},[player,pos])\r\n        }\r\n        \r\n    }\r\n\r\n    const checkWin =() =>{\r\n        patterns.forEach((currPattern) =>{\r\n            const firstPlayer = board[currPattern[0]]\r\n            let foundWinningPattern = true\r\n            if(firstPlayer ==\"\")return;\r\n            currPattern.forEach((idx)=>{\r\n                if(board[idx]!=firstPlayer){\r\n                    foundWinningPattern =false\r\n                }\r\n            })\r\n            if(foundWinningPattern){\r\n                setResult({winner:firstPlayer,state:\"won\"})\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"App\">\r\n            <div className=\"board\">\r\n                <div className=\"row\">\r\n                    <Square val={board[0]} chooseSquare={()=>sendMessage(0)}/>\r\n                    <Square val={board[1]} chooseSquare={()=>sendMessage(1)}/>\r\n                    <Square val={board[2]} chooseSquare={()=>sendMessage(2)}/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Square val={board[3]} chooseSquare={()=>sendMessage(3)}/>\r\n                    <Square val={board[4]} chooseSquare={()=>sendMessage(4)}/>\r\n                    <Square val={board[5]} chooseSquare={()=>sendMessage(5)}/>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <Square val={board[6]} chooseSquare={()=>sendMessage(6)}/>\r\n                    <Square val={board[7]} chooseSquare={()=>sendMessage(7)}/>\r\n                    <Square val={board[8]} chooseSquare={()=>sendMessage(8)}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        \r\n\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nlet Square = function({val, chooseSquare}){\r\n    return (\r\n        <div className=\"square\" onClick={chooseSquare}>\r\n            {val}\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}