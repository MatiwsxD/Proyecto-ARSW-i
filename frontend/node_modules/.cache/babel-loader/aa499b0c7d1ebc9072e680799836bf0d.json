{"ast":null,"code":"var _jsxFileName = \"D:\\\\Escritorio\\\\Proyecto\\\\TicTacToe\\\\frontend\\\\src\\\\pages\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport \"./Game.css\";\nimport { useState } from \"react\";\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let Game = function () {\n  _s();\n\n  let [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  let player = null;\n  let turn = null;\n  let sala = null;\n  let stompClient = null;\n  useEffect(() => {\n    async function getData() {\n      sala = localStorage.getItem(\"Sala\"); //console.log(sala);\n\n      let url = 'http://localhost:8080/tictac/players/' + sala;\n      let players = await fetch(url, {\n        method: 'GET'\n      }).then(response => response.json());\n      player = players;\n\n      if (players == 1) {\n        turn = true;\n      } else {\n        turn = false;\n      }\n    }\n\n    async function socketWeb() {\n      let Sock = new SockJS(\"http://localhost:8080/tictactoe\");\n      stompClient = over(Sock);\n      stompClient.connect({}, function () {\n        stompClient.subscribe('/events/ws/' + sala, function (x) {\n          let y = x.body.split(',').map(function (item) {\n            return parseInt(item, 10);\n          });\n          chooseSquare(y[0], y[1]); //console.log(y)\n\n          turn = !turn;\n        });\n      });\n    }\n\n    getData();\n    socketWeb();\n  }, []);\n\n  let chooseSquare = function (player1, square) {\n    setBoard(board.map((val, idx) => {\n      if (idx == square && val == \"\") {\n        return player1;\n      }\n\n      return val;\n    }));\n  };\n\n  let sendMessage = function (pos) {\n    //console.log(turn)\n    if (turn) {\n      stompClient.send('/events/ws/' + sala, {}, [player, pos]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[0],\n          chooseSquare: () => sendMessage(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[1],\n          chooseSquare: () => sendMessage(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[2],\n          chooseSquare: () => sendMessage(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[3],\n          chooseSquare: () => sendMessage(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[4],\n          chooseSquare: () => sendMessage(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[5],\n          chooseSquare: () => {\n            alert(5);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[6],\n          chooseSquare: () => {\n            alert(6);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[7],\n          chooseSquare: () => {\n            alert(7);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[8],\n          chooseSquare: () => {\n            alert(8);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"aX6GlxwSpWrB+mggD8ciVozEGEo=\");\n\n_c = Game;\n\nlet Square = function (_ref) {\n  let {\n    val,\n    chooseSquare\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    onClick: chooseSquare,\n    children: val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Square;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Square\");","map":{"version":3,"names":["useState","over","SockJS","useEffect","Game","board","setBoard","player","turn","sala","stompClient","getData","localStorage","getItem","url","players","fetch","method","then","response","json","socketWeb","Sock","connect","subscribe","x","y","body","split","map","item","parseInt","chooseSquare","player1","square","val","idx","sendMessage","pos","send","alert","Square"],"sources":["D:/Escritorio/Proyecto/TicTacToe/frontend/src/pages/Game.js"],"sourcesContent":["import \"./Game.css\"\r\nimport { useState } from \"react\";\r\nimport {over} from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\n\r\nimport { useEffect} from \"react\";\r\n\r\nexport let Game = function(){\r\n    let [board, setBoard] = useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"])\r\n    let player = null\r\n    let turn = null;\r\n    let sala = null\r\n    let stompClient = null\r\n    useEffect(()=> {\r\n        async function getData(){\r\n            sala = localStorage.getItem(\"Sala\")\r\n            //console.log(sala);\r\n            let url = 'http://localhost:8080/tictac/players/'+sala\r\n            let players = await fetch(url,{\r\n                method: 'GET'\r\n              }).then(response => response.json());\r\n            player = players;\r\n            if(players == 1){\r\n                turn = true;\r\n            }\r\n            else{\r\n                turn = false;\r\n            }\r\n        }\r\n\r\n        async function socketWeb(){\r\n            let Sock = new SockJS(\"http://localhost:8080/tictactoe\")\r\n            stompClient = over(Sock);\r\n            stompClient.connect({},function(){\r\n                stompClient.subscribe('/events/ws/'+sala, function(x){\r\n                    let y = x.body.split(',').map(function(item) {\r\n                        return parseInt(item, 10);\r\n                    });\r\n                    chooseSquare(y[0],y[1])\r\n                    //console.log(y)\r\n                    turn = !turn\r\n                }) \r\n            })\r\n        }\r\n\r\n\r\n        getData();\r\n        socketWeb();\r\n    \r\n    },[])\r\n\r\n    let chooseSquare = function(player1, square){\r\n        setBoard(\r\n            board.map((val,idx)=>{\r\n                if(idx == square&& val ==\"\"){\r\n                    return player1\r\n                }\r\n                return val\r\n            })\r\n        )\r\n\r\n    }\r\n    let sendMessage = function(pos){\r\n        //console.log(turn)\r\n        if(turn){\r\n\r\n            stompClient.send('/events/ws/'+sala,{},[player,pos])\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"App\">\r\n            <div className=\"board\">\r\n                <div className=\"row\">\r\n                    <Square val={board[0]} chooseSquare={()=>sendMessage(1)}/>\r\n                    <Square val={board[1]} chooseSquare={()=>sendMessage(1)}/>\r\n                    <Square val={board[2]} chooseSquare={()=>sendMessage(1)}/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Square val={board[3]} chooseSquare={()=>sendMessage(1)}/>\r\n                    <Square val={board[4]} chooseSquare={()=>sendMessage(1)}/>\r\n                    <Square val={board[5]} chooseSquare={()=>{alert(5)}}/>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <Square val={board[6]} chooseSquare={()=>{alert(6)}}/>\r\n                    <Square val={board[7]} chooseSquare={()=>{alert(7)}}/>\r\n                    <Square val={board[8]} chooseSquare={()=>{alert(8)}}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        \r\n\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nlet Square = function({val, chooseSquare}){\r\n    return (\r\n        <div className=\"square\" onClick={chooseSquare}>\r\n            {val}\r\n        </div>\r\n    )\r\n}"],"mappings":";;;AAAA,OAAO,YAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAQC,IAAR,QAAmB,SAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AAEA,SAASC,SAAT,QAAyB,OAAzB;;AAEA,OAAO,IAAIC,IAAI,GAAG,YAAU;EAAA;;EACxB,IAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,EAAa,EAAb,EAAgB,EAAhB,EAAmB,EAAnB,EAAsB,EAAtB,EAAyB,EAAzB,CAAD,CAAhC;EACA,IAAIO,MAAM,GAAG,IAAb;EACA,IAAIC,IAAI,GAAG,IAAX;EACA,IAAIC,IAAI,GAAG,IAAX;EACA,IAAIC,WAAW,GAAG,IAAlB;EACAP,SAAS,CAAC,MAAK;IACX,eAAeQ,OAAf,GAAwB;MACpBF,IAAI,GAAGG,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAP,CADoB,CAEpB;;MACA,IAAIC,GAAG,GAAG,0CAAwCL,IAAlD;MACA,IAAIM,OAAO,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAK;QAC1BG,MAAM,EAAE;MADkB,CAAL,CAAL,CAEfC,IAFe,CAEVC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFF,CAApB;MAGAb,MAAM,GAAGQ,OAAT;;MACA,IAAGA,OAAO,IAAI,CAAd,EAAgB;QACZP,IAAI,GAAG,IAAP;MACH,CAFD,MAGI;QACAA,IAAI,GAAG,KAAP;MACH;IACJ;;IAED,eAAea,SAAf,GAA0B;MACtB,IAAIC,IAAI,GAAG,IAAIpB,MAAJ,CAAW,iCAAX,CAAX;MACAQ,WAAW,GAAGT,IAAI,CAACqB,IAAD,CAAlB;MACAZ,WAAW,CAACa,OAAZ,CAAoB,EAApB,EAAuB,YAAU;QAC7Bb,WAAW,CAACc,SAAZ,CAAsB,gBAAcf,IAApC,EAA0C,UAASgB,CAAT,EAAW;UACjD,IAAIC,CAAC,GAAGD,CAAC,CAACE,IAAF,CAAOC,KAAP,CAAa,GAAb,EAAkBC,GAAlB,CAAsB,UAASC,IAAT,EAAe;YACzC,OAAOC,QAAQ,CAACD,IAAD,EAAO,EAAP,CAAf;UACH,CAFO,CAAR;UAGAE,YAAY,CAACN,CAAC,CAAC,CAAD,CAAF,EAAMA,CAAC,CAAC,CAAD,CAAP,CAAZ,CAJiD,CAKjD;;UACAlB,IAAI,GAAG,CAACA,IAAR;QACH,CAPD;MAQH,CATD;IAUH;;IAGDG,OAAO;IACPU,SAAS;EAEZ,CApCQ,EAoCP,EApCO,CAAT;;EAsCA,IAAIW,YAAY,GAAG,UAASC,OAAT,EAAkBC,MAAlB,EAAyB;IACxC5B,QAAQ,CACJD,KAAK,CAACwB,GAAN,CAAU,CAACM,GAAD,EAAKC,GAAL,KAAW;MACjB,IAAGA,GAAG,IAAIF,MAAP,IAAgBC,GAAG,IAAG,EAAzB,EAA4B;QACxB,OAAOF,OAAP;MACH;;MACD,OAAOE,GAAP;IACH,CALD,CADI,CAAR;EASH,CAVD;;EAWA,IAAIE,WAAW,GAAG,UAASC,GAAT,EAAa;IAC3B;IACA,IAAG9B,IAAH,EAAQ;MAEJE,WAAW,CAAC6B,IAAZ,CAAiB,gBAAc9B,IAA/B,EAAoC,EAApC,EAAuC,CAACF,MAAD,EAAQ+B,GAAR,CAAvC;IACH;EAEJ,CAPD;;EAYA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,uBACI;MAAK,SAAS,EAAC,OAAf;MAAA,wBACI;QAAK,SAAS,EAAC,KAAf;QAAA,wBACI,QAAC,MAAD;UAAQ,GAAG,EAAEjC,KAAK,CAAC,CAAD,CAAlB;UAAuB,YAAY,EAAE,MAAIgC,WAAW,CAAC,CAAD;QAApD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,MAAD;UAAQ,GAAG,EAAEhC,KAAK,CAAC,CAAD,CAAlB;UAAuB,YAAY,EAAE,MAAIgC,WAAW,CAAC,CAAD;QAApD;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI,QAAC,MAAD;UAAQ,GAAG,EAAEhC,KAAK,CAAC,CAAD,CAAlB;UAAuB,YAAY,EAAE,MAAIgC,WAAW,CAAC,CAAD;QAApD;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAMI;QAAK,SAAS,EAAC,KAAf;QAAA,wBACI,QAAC,MAAD;UAAQ,GAAG,EAAEhC,KAAK,CAAC,CAAD,CAAlB;UAAuB,YAAY,EAAE,MAAIgC,WAAW,CAAC,CAAD;QAApD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,MAAD;UAAQ,GAAG,EAAEhC,KAAK,CAAC,CAAD,CAAlB;UAAuB,YAAY,EAAE,MAAIgC,WAAW,CAAC,CAAD;QAApD;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI,QAAC,MAAD;UAAQ,GAAG,EAAEhC,KAAK,CAAC,CAAD,CAAlB;UAAuB,YAAY,EAAE,MAAI;YAACmC,KAAK,CAAC,CAAD,CAAL;UAAS;QAAnD;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QANJ,eAYI;QAAK,SAAS,EAAC,KAAf;QAAA,wBACI,QAAC,MAAD;UAAQ,GAAG,EAAEnC,KAAK,CAAC,CAAD,CAAlB;UAAuB,YAAY,EAAE,MAAI;YAACmC,KAAK,CAAC,CAAD,CAAL;UAAS;QAAnD;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI,QAAC,MAAD;UAAQ,GAAG,EAAEnC,KAAK,CAAC,CAAD,CAAlB;UAAuB,YAAY,EAAE,MAAI;YAACmC,KAAK,CAAC,CAAD,CAAL;UAAS;QAAnD;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI,QAAC,MAAD;UAAQ,GAAG,EAAEnC,KAAK,CAAC,CAAD,CAAlB;UAAuB,YAAY,EAAE,MAAI;YAACmC,KAAK,CAAC,CAAD,CAAL;UAAS;QAAnD;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAZJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AA4BH,CA/FM;;GAAIpC,I;;KAAAA,I;;AAiGX,IAAIqC,MAAM,GAAG,gBAA6B;EAAA,IAApB;IAACN,GAAD;IAAMH;EAAN,CAAoB;EACtC,oBACI;IAAK,SAAS,EAAC,QAAf;IAAwB,OAAO,EAAEA,YAAjC;IAAA,UACKG;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAND;;MAAIM,M"},"metadata":{},"sourceType":"module"}