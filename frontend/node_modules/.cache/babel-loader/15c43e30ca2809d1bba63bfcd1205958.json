{"ast":null,"code":"var _jsxFileName = \"D:\\\\Escritorio\\\\Proyecto\\\\TicTacToe\\\\frontend\\\\src\\\\pages\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport \"./Game.css\";\nimport { useState } from \"react\";\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\nvar player = null;\nvar turn = null;\nvar sala = null;\nvar stompClient = null;\nexport let Game = function () {\n  _s();\n\n  useEffect(() => {\n    getData();\n    socketWeb();\n  }, []);\n\n  async function getData() {\n    sala = localStorage.getItem(\"Sala\"); //console.log(sala);\n\n    let url = 'http://localhost:8080/tictac/players/' + sala;\n    let players = await fetch(url, {\n      method: 'GET'\n    }).then(response => response.json());\n    player = players;\n\n    if (players === 1) {\n      turn = true;\n    } else {\n      turn = false;\n    }\n  }\n\n  function socketWeb() {\n    let Sock = new SockJS(\"http://localhost:8080/tictactoe\");\n    stompClient = over(Sock);\n    stompClient.connect({}, function () {\n      stompClient.subscribe('/events/ws/' + sala, function (x) {\n        let y = x.body.split(',').map(function (item) {\n          return parseInt(item, 10);\n        });\n        turn = !turn;\n        chooseSquare(y[0], y[1]); //console.log(y)                \n      });\n    });\n  }\n\n  let chooseSquare = function (player1, square) {\n    setBoard(board.map((val, idx) => {\n      if (idx === square && val === \"\") {\n        return player1;\n      }\n\n      return val;\n    }));\n  };\n\n  let sendMessage = function (pos) {\n    console.log(\"t,\", turn);\n    console.log(\"p,\", player);\n    console.log(\"s,\", sala);\n    console.log(\"st,\", stompClient);\n\n    if (turn) {\n      stompClient.send('/events/ws/' + sala, {}, [player, pos]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[0],\n          chooseSquare: () => sendMessage(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[1],\n          chooseSquare: () => sendMessage(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[2],\n          chooseSquare: () => sendMessage(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[3],\n          chooseSquare: () => sendMessage(3)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[4],\n          chooseSquare: () => sendMessage(4)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[5],\n          chooseSquare: () => sendMessage(5)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Square, {\n          val: board[6],\n          chooseSquare: () => sendMessage(6)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[7],\n          chooseSquare: () => sendMessage(7)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Square, {\n          val: board[8],\n          chooseSquare: () => sendMessage(8)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Game;\n\nlet Square = function (_ref) {\n  let {\n    val,\n    chooseSquare\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"square\",\n    onClick: chooseSquare,\n    children: val\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Square;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Game\");\n$RefreshReg$(_c2, \"Square\");","map":{"version":3,"names":["useState","over","SockJS","useRef","useEffect","board","setBoard","player","turn","sala","stompClient","Game","getData","socketWeb","localStorage","getItem","url","players","fetch","method","then","response","json","Sock","connect","subscribe","x","y","body","split","map","item","parseInt","chooseSquare","player1","square","val","idx","sendMessage","pos","console","log","send","Square"],"sources":["D:/Escritorio/Proyecto/TicTacToe/frontend/src/pages/Game.js"],"sourcesContent":["import \"./Game.css\"\r\nimport { useState } from \"react\";\r\nimport {over} from 'stompjs';\r\nimport SockJS from 'sockjs-client';\r\n\r\nimport { useRef,useEffect} from \"react\";\r\nlet [board, setBoard] = useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"])\r\nvar player = null\r\nvar turn = null\r\nvar sala = null\r\nvar stompClient = null\r\n\r\nexport let Game = function(){\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        socketWeb();\r\n     }, [])\r\n\r\n    async function getData(){\r\n        sala = localStorage.getItem(\"Sala\")\r\n        //console.log(sala);\r\n        let url = 'http://localhost:8080/tictac/players/'+sala\r\n        let players = await fetch(url,{\r\n            method: 'GET'\r\n            }).then(response => response.json());\r\n        player = players;\r\n        if(players === 1){\r\n           turn  = true;\r\n        }\r\n        else{\r\n            turn  = false;\r\n        }\r\n    }\r\n\r\n    function socketWeb(){\r\n        let Sock = new SockJS(\"http://localhost:8080/tictactoe\")\r\n        stompClient = over(Sock);\r\n        stompClient.connect({},function(){\r\n            stompClient.subscribe('/events/ws/'+sala, function(x){\r\n                let y = x.body.split(',').map(function(item) {\r\n                    return parseInt(item, 10);\r\n                });\r\n                turn  = !turn \r\n                chooseSquare(y[0],y[1])\r\n                //console.log(y)                \r\n           }) \r\n        })\r\n    }\r\n    \r\n\r\n    let chooseSquare = function(player1, square){\r\n        setBoard(\r\n            board.map((val,idx)=>{\r\n                if(idx === square && val ===\"\"){\r\n                    return player1\r\n                }\r\n                return val\r\n            })\r\n        )\r\n        \r\n\r\n    }\r\n    let sendMessage = function(pos){\r\n        console.log(\"t,\",turn)\r\n        console.log(\"p,\",player)\r\n        console.log(\"s,\",sala)\r\n        console.log(\"st,\",stompClient)\r\n        if(turn){\r\n\r\n            stompClient.send('/events/ws/'+sala,{},[player,pos])\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"App\">\r\n            <div className=\"board\">\r\n                <div className=\"row\">\r\n                    <Square val={board[0]} chooseSquare={()=>sendMessage(0)}/>\r\n                    <Square val={board[1]} chooseSquare={()=>sendMessage(1)}/>\r\n                    <Square val={board[2]} chooseSquare={()=>sendMessage(2)}/>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <Square val={board[3]} chooseSquare={()=>sendMessage(3)}/>\r\n                    <Square val={board[4]} chooseSquare={()=>sendMessage(4)}/>\r\n                    <Square val={board[5]} chooseSquare={()=>sendMessage(5)}/>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <Square val={board[6]} chooseSquare={()=>sendMessage(6)}/>\r\n                    <Square val={board[7]} chooseSquare={()=>sendMessage(7)}/>\r\n                    <Square val={board[8]} chooseSquare={()=>sendMessage(8)}/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        \r\n\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nlet Square = function({val, chooseSquare}){\r\n    return (\r\n        <div className=\"square\" onClick={chooseSquare}>\r\n            {val}\r\n        </div>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}